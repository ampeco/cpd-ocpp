{"version":3,"sources":["../src/helpers.js"],"names":["applyPropertiesValidators","getObjectValues","MODEL_VALUES_SYMBOL","object","schema","values","joiSchema","properties","key","hasOwnProperty","validator","reach","validate","get","set","val","undefined","enumerable","configurable","fieldName","value","error","Error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;QAMSA,yB,GAAAA,yB;QAsCAC,e,GAAAA,e;;AA5CT;;;;AACA;;;;;;AAEA,IAAMC,sBAAsB,sBAAO,aAAP,CAA5B;;AAGA,SAASF,yBAAT,CAAoCG,MAApC,EAA4CC,MAA5C,EAAiE;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AAC/D,MAAMC,YAAY,oBAAUF,MAAV,CAAlB;;AAEAD,SAAOD,mBAAP,IAA8B,EAA9B;;AAEA,MAAMK,aAAa,EAAnB;;AAL+D,6BAMtDC,GANsD;AAO7D,QAAI,CAACJ,OAAOG,UAAP,CAAkBE,cAAlB,CAAiCD,GAAjC,CAAL,EAA4C;AAC1C;AAAA;AAAA;AACD;AACD,QAAME,YAAY,cAAIC,KAAJ,CAAUL,SAAV,EAAqBE,GAArB,CAAlB;;AAEAI,aAASJ,GAAT,EAAcH,OAAOG,GAAP,CAAd,EAA2BE,SAA3B;AACAP,WAAOD,mBAAP,EAA4BM,GAA5B,IAAmCH,OAAOG,GAAP,CAAnC;;AAEAD,eAAWC,GAAX,IAAkB;AAChBK,WAAK;AAAA,eAAMV,OAAOD,mBAAP,EAA4BM,GAA5B,CAAN;AAAA,OADW;AAEhBM,WAAK,aAACC,GAAD,EAAS;AACZH,iBAASJ,GAAT,EAAcO,GAAd,EAAmBL,SAAnB;;AAECK,gBAAQC,SAAT,GAAuB,OAAOb,OAAOD,mBAAP,EAA4BM,GAA5B,CAA9B,GAAmEL,OAAOD,mBAAP,EAA4BM,GAA5B,IAAmCO,GAAtG;AACD,OANe;AAOhBE,kBAAY,IAPI;AAQhBC,oBAAc;AARE,KAAlB;AAf6D;;AAM/D,OAAK,IAAIV,GAAT,IAAgBJ,OAAOG,UAAvB,EAAmC;AAAA,qBAA1BC,GAA0B;;AAAA;AAmBlC;;AAED,kCAAwBL,MAAxB,EAAgCI,UAAhC;;AAEA,WAASK,QAAT,CAAmBO,SAAnB,EAA8BC,KAA9B,EAAqChB,MAArC,EAA6C;AAAA,wBACzB,cAAIQ,QAAJ,CAAaQ,KAAb,EAAoBhB,MAApB,CADyB;AAAA,QACnCiB,KADmC,iBACnCA,KADmC;;AAE3C,QAAIA,UAAU,IAAd,EAAoB;AAClB,YAAM,IAAIC,KAAJ,qBAA4BF,KAA5B,oBAAgDD,SAAhD,CAAN;AACD;AACF;AACF;;AAGD,SAASlB,eAAT,CAA0BE,MAA1B,EAAkC;AAChC,MAAME,oCAAeF,OAAOD,mBAAP,KAA+B,EAA9C,CAAN;;AAEA,OAAK,IAAIM,GAAT,IAAgBH,MAAhB,EAAwB;AACtB,QAAI,CAACA,OAAOI,cAAP,CAAsBD,GAAtB,CAAL,EAAiC;AAC/B;AACD;AACD,QAAIH,OAAOG,GAAP,MAAgBQ,SAApB,EAA+B;AAC7B,aAAOX,OAAOG,GAAP,CAAP;AACD;AACF;AACD,SAAOL,OAAOD,mBAAP,CAAP;AACD","file":"helpers.js","sourcesContent":["import Joi from 'joi';\nimport Enjoi from 'enjoi';\n\nconst MODEL_VALUES_SYMBOL = Symbol('modelValues');\n\nexport\nfunction applyPropertiesValidators (object, schema, values = {}) {\n  const joiSchema = new Enjoi(schema);\n\n  object[MODEL_VALUES_SYMBOL] = {};\n\n  const properties = {};\n  for (let key in schema.properties) {\n    if (!schema.properties.hasOwnProperty(key)) {\n      return;\n    }\n    const validator = Joi.reach(joiSchema, key);\n\n    validate(key, values[key], validator);\n    object[MODEL_VALUES_SYMBOL][key] = values[key];\n\n    properties[key] = {\n      get: () => object[MODEL_VALUES_SYMBOL][key],\n      set: (val) => {\n        validate(key, val, validator);\n\n        (val === undefined) ? (delete object[MODEL_VALUES_SYMBOL][key]) : (object[MODEL_VALUES_SYMBOL][key] = val);\n      },\n      enumerable: true,\n      configurable: false\n    };\n  }\n\n  Object.defineProperties(object, properties);\n\n  function validate (fieldName, value, schema) {\n    const { error } = Joi.validate(value, schema);\n    if (error !== null) {\n      throw new Error(`Invalid value \"${value}\" for field ${fieldName}`);\n    }\n  }\n}\n\nexport\nfunction getObjectValues (object) {\n  const values = { ...(object[MODEL_VALUES_SYMBOL] || {}) };\n\n  for (let key in values) {\n    if (!values.hasOwnProperty(key)) {\n      return;\n    }\n    if (values[key] === undefined) {\n      delete values[key];\n    }\n  }\n  return object[MODEL_VALUES_SYMBOL];\n}\n"]}